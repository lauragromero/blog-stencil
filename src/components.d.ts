/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface DetailCard {
        "detailAuthor": string;
        "detailDate": string;
        "detailText": string;
        "detailTitle": string;
    }
    interface DetailComment {
        "commentAuthor": string;
        "commentDate": string;
        "commentText": string;
    }
    interface FooterBlog {
    }
    interface GridLayout {
    }
    interface HeaderTemplate {
        "headerTitle": string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface NavMenu {
        "linkHome": any;
    }
    interface PostComponent {
        "datePost": string;
        "nicknamePost": string;
        "textPost": string;
        "titlePost": string;
        "usernamePost": string;
    }
}
declare global {
    interface HTMLDetailCardElement extends Components.DetailCard, HTMLStencilElement {
    }
    var HTMLDetailCardElement: {
        prototype: HTMLDetailCardElement;
        new (): HTMLDetailCardElement;
    };
    interface HTMLDetailCommentElement extends Components.DetailComment, HTMLStencilElement {
    }
    var HTMLDetailCommentElement: {
        prototype: HTMLDetailCommentElement;
        new (): HTMLDetailCommentElement;
    };
    interface HTMLFooterBlogElement extends Components.FooterBlog, HTMLStencilElement {
    }
    var HTMLFooterBlogElement: {
        prototype: HTMLFooterBlogElement;
        new (): HTMLFooterBlogElement;
    };
    interface HTMLGridLayoutElement extends Components.GridLayout, HTMLStencilElement {
    }
    var HTMLGridLayoutElement: {
        prototype: HTMLGridLayoutElement;
        new (): HTMLGridLayoutElement;
    };
    interface HTMLHeaderTemplateElement extends Components.HeaderTemplate, HTMLStencilElement {
    }
    var HTMLHeaderTemplateElement: {
        prototype: HTMLHeaderTemplateElement;
        new (): HTMLHeaderTemplateElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLNavMenuElement extends Components.NavMenu, HTMLStencilElement {
    }
    var HTMLNavMenuElement: {
        prototype: HTMLNavMenuElement;
        new (): HTMLNavMenuElement;
    };
    interface HTMLPostComponentElement extends Components.PostComponent, HTMLStencilElement {
    }
    var HTMLPostComponentElement: {
        prototype: HTMLPostComponentElement;
        new (): HTMLPostComponentElement;
    };
    interface HTMLElementTagNameMap {
        "detail-card": HTMLDetailCardElement;
        "detail-comment": HTMLDetailCommentElement;
        "footer-blog": HTMLFooterBlogElement;
        "grid-layout": HTMLGridLayoutElement;
        "header-template": HTMLHeaderTemplateElement;
        "my-component": HTMLMyComponentElement;
        "nav-menu": HTMLNavMenuElement;
        "post-component": HTMLPostComponentElement;
    }
}
declare namespace LocalJSX {
    interface DetailCard {
        "detailAuthor"?: string;
        "detailDate"?: string;
        "detailText"?: string;
        "detailTitle"?: string;
    }
    interface DetailComment {
        "commentAuthor"?: string;
        "commentDate"?: string;
        "commentText"?: string;
    }
    interface FooterBlog {
    }
    interface GridLayout {
    }
    interface HeaderTemplate {
        "headerTitle"?: string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface NavMenu {
        "linkHome"?: any;
    }
    interface PostComponent {
        "datePost"?: string;
        "nicknamePost"?: string;
        "onSelectPost"?: (event: CustomEvent<any>) => void;
        "textPost"?: string;
        "titlePost"?: string;
        "usernamePost"?: string;
    }
    interface IntrinsicElements {
        "detail-card": DetailCard;
        "detail-comment": DetailComment;
        "footer-blog": FooterBlog;
        "grid-layout": GridLayout;
        "header-template": HeaderTemplate;
        "my-component": MyComponent;
        "nav-menu": NavMenu;
        "post-component": PostComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "detail-card": LocalJSX.DetailCard & JSXBase.HTMLAttributes<HTMLDetailCardElement>;
            "detail-comment": LocalJSX.DetailComment & JSXBase.HTMLAttributes<HTMLDetailCommentElement>;
            "footer-blog": LocalJSX.FooterBlog & JSXBase.HTMLAttributes<HTMLFooterBlogElement>;
            "grid-layout": LocalJSX.GridLayout & JSXBase.HTMLAttributes<HTMLGridLayoutElement>;
            "header-template": LocalJSX.HeaderTemplate & JSXBase.HTMLAttributes<HTMLHeaderTemplateElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "nav-menu": LocalJSX.NavMenu & JSXBase.HTMLAttributes<HTMLNavMenuElement>;
            "post-component": LocalJSX.PostComponent & JSXBase.HTMLAttributes<HTMLPostComponentElement>;
        }
    }
}
